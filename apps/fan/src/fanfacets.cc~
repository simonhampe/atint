#include "polymake/client.h"
#include "polymake/Rational.h"
#include "polymake/Matrix.h"
#include "polymake/Vector.h"
#include "polymake/linalg.h"
#include "polymake/IncidenceMatrix.h"
#include "polymake/Array.h"
#include "polymake/Set.h"

namespace polymake { namespace fan {
 
  /*
    @brief Computes the facets of a given fan as an incidence matrix where rows = facers, columns = rays
    @param f a PolyhedralFan object
    @return A non-symmetric incidence matrix, where each row corresponds to a facet and column i corresponds to ray i
  */
  IncidenceMatrix<> fanFacets(perl::Object f) {
      //Read out the maximal cones and their incidence matrix
      Array<IncidenceMatrix<> > maximalIncidence = f.give("MAXIMAL_CONES_INCIDENCES");
      
      Set<Set<Integer> > facetIndexSet();
      
      //Go through all incidence matrices and extract the set of column indices for each facet (i.e. for each row of the inc. matrix)
      for(int r = 0; r < maximalIncidence.size(); r++) {
	IncidenceMatrix<> maximalCone = maximalIncidence[r];
	for(int k = 0; k < maximalCone.rows(); k++) {
	  Set<Integer> colIndices;
	  for(int c = 0; c < maximalCone.cols(); c++) {
	   if(maximalCone(k,c)) {
	     int carr[] = {c};
	     colIndices += Set<Integer>(Array<Integer>((int[])({c})));
	   }
	  }
	}
      }
      return IncidenceMatrix<>();
      
  }
  
  Function4perl(&fanFacets, "fanFacets(PolyhedralFan)");
  
}
}