/*--------------------HEADER 2--------------------*/
import de.jreality.shader.CommonAttributes;
setAccessibility(true);

synchronized(root) {

geom = new SceneGraphComponent();
geom.setName("2");
root.addChild(geom);
/*----------------------------------------*/
appearance = new Appearance();
appearance.setAttribute(CommonAttributes.VERTEX_DRAW, true);
appearance.setAttribute(CommonAttributes.SPHERES_DRAW, true);
appearance.setAttribute(CommonAttributes.DEPTH_FUDGE_FACTOR,0.999999);
appearance.setAttribute(CommonAttributes.POINT_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.549,(float)0.549,(float)0.549));
geom.setAppearance(appearance);
appearance.setAttribute(CommonAttributes.POLYGON_SHADER +"."+CommonAttributes.SMOOTH_SHADING,false);
appearance.setAttribute(CommonAttributes.FACE_DRAW, true);
appearance.setAttribute(CommonAttributes.TUBES_DRAW,true);
appearance.setAttribute(CommonAttributes.EDGE_DRAW,true);
appearance.setAttribute(CommonAttributes.LINE_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.2745,(float)0.2745,(float)0.2745));
appearance.setAttribute(CommonAttributes.POLYGON_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.4667,(float)0.9255,(float)0.6196));
ifsf = new IndexedFaceSetFactory();
/*--------------------geometry--------------------*/
ifsf.setVertexCount(4);
pts = new double[][]{
{-1,1,-1},
  {-1,1,1},
  {-1,-1,1},
  {-1,-1,-1}};//pts
ifsf.setVertexCoordinates(pts);
colors = new double[]{
  1,0,0,
  1,0,0,
  1,0,0,
  1,0,0};
ifsf.setVertexColors(new DoubleArrayArray.Inlined(colors, 3) );
pts_thicknesses = new double[] {
0.1,0.1,0.1,0.1 };
ifsf.setVertexRelativeRadii( pts_thicknesses );
ifsf.setGenerateFaceNormals(true);
ifsf.setGenerateVertexNormals(true);
ifsf.setFaceCount(1);
faces = new int[][]{
  { 0,1,2,3 }};
ifsf.setFaceIndices(faces);
faceColors = new double[]{
  0.4667,0.9255,0.6196
};
ifsf.setFaceColors( new DoubleArrayArray.Inlined(faceColors, 3));
lines_thicknesses = new double[] {
  0.5,0.5,0.5,0.5 };
edges = IndexedFaceSetUtility.edgesFromFaces(faces);
ifsf.setEdgeCount(edges.length);
ifsf.setEdgeIndices(edges);
ifsf.setEdgeRelativeRadii( lines_thicknesses );
ifsf.update();
part1=new SceneGraphComponent();
part1.setGeometry(ifsf.getGeometry());
part1.setName("geometry");
part1.setAppearance(appearance);
geom.addChild(part1);
/*----------------------------------------*/
appearance = new Appearance();
appearance.setAttribute(CommonAttributes.VERTEX_DRAW, true);
appearance.setAttribute(CommonAttributes.SPHERES_DRAW, true);
appearance.setAttribute(CommonAttributes.DEPTH_FUDGE_FACTOR,0.999999);
appearance.setAttribute(CommonAttributes.POINT_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.549,(float)0.549,(float)0.549));
geom.setAppearance(appearance);
appearance.setAttribute(CommonAttributes.POLYGON_SHADER +"."+CommonAttributes.SMOOTH_SHADING,false);
appearance.setAttribute(CommonAttributes.FACE_DRAW, true);
appearance.setAttribute(CommonAttributes.TUBES_DRAW,true);
appearance.setAttribute(CommonAttributes.EDGE_DRAW,true);
appearance.setAttribute(CommonAttributes.LINE_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.2745,(float)0.2745,(float)0.2745));
appearance.setAttribute(CommonAttributes.POLYGON_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.4667,(float)0.9255,(float)0.6196));
ifsf = new IndexedFaceSetFactory();
/*--------------------geometry--------------------*/
ifsf.setVertexCount(4);
pts = new double[][]{
{1,1,-1},
  {1,1,1},
  {1,-1,1},
  {1,-1,-1}};//pts
ifsf.setVertexCoordinates(pts);
colors = new double[]{
  1,0,0,
  1,0,0,
  1,0,0,
  1,0,0};
ifsf.setVertexColors(new DoubleArrayArray.Inlined(colors, 3) );
pts_thicknesses = new double[] {
0.1,0.1,0.1,0.1 };
ifsf.setVertexRelativeRadii( pts_thicknesses );
ifsf.setGenerateFaceNormals(true);
ifsf.setGenerateVertexNormals(true);
ifsf.setFaceCount(1);
faces = new int[][]{
  { 0,1,2,3 }};
ifsf.setFaceIndices(faces);
faceColors = new double[]{
  0.4667,0.9255,0.6196
};
ifsf.setFaceColors( new DoubleArrayArray.Inlined(faceColors, 3));
lines_thicknesses = new double[] {
  0.5,0.5,0.5,0.5 };
edges = IndexedFaceSetUtility.edgesFromFaces(faces);
ifsf.setEdgeCount(edges.length);
ifsf.setEdgeIndices(edges);
ifsf.setEdgeRelativeRadii( lines_thicknesses );
ifsf.update();
part1=new SceneGraphComponent();
part1.setGeometry(ifsf.getGeometry());
part1.setName("geometry");
part1.setAppearance(appearance);
geom.addChild(part1);
/*----------------------------------------*/
appearance = new Appearance();
appearance.setAttribute(CommonAttributes.VERTEX_DRAW, true);
appearance.setAttribute(CommonAttributes.SPHERES_DRAW, true);
appearance.setAttribute(CommonAttributes.DEPTH_FUDGE_FACTOR,0.999999);
appearance.setAttribute(CommonAttributes.POINT_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.549,(float)0.549,(float)0.549));
geom.setAppearance(appearance);
appearance.setAttribute(CommonAttributes.POLYGON_SHADER +"."+CommonAttributes.SMOOTH_SHADING,false);
appearance.setAttribute(CommonAttributes.FACE_DRAW, true);
appearance.setAttribute(CommonAttributes.TUBES_DRAW,true);
appearance.setAttribute(CommonAttributes.EDGE_DRAW,true);
appearance.setAttribute(CommonAttributes.LINE_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.2745,(float)0.2745,(float)0.2745));
appearance.setAttribute(CommonAttributes.POLYGON_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.4667,(float)0.9255,(float)0.6196));
ifsf = new IndexedFaceSetFactory();
/*--------------------geometry--------------------*/
ifsf.setVertexCount(4);
pts = new double[][]{
{1,-1,-1},
  {1,-1,1},
  {-1,-1,1},
  {-1,-1,-1}};//pts
ifsf.setVertexCoordinates(pts);
colors = new double[]{
  1,0,0,
  1,0,0,
  1,0,0,
  1,0,0};
ifsf.setVertexColors(new DoubleArrayArray.Inlined(colors, 3) );
pts_thicknesses = new double[] {
0.1,0.1,0.1,0.1 };
ifsf.setVertexRelativeRadii( pts_thicknesses );
ifsf.setGenerateFaceNormals(true);
ifsf.setGenerateVertexNormals(true);
ifsf.setFaceCount(1);
faces = new int[][]{
  { 0,1,2,3 }};
ifsf.setFaceIndices(faces);
faceColors = new double[]{
  0.4667,0.9255,0.6196
};
ifsf.setFaceColors( new DoubleArrayArray.Inlined(faceColors, 3));
lines_thicknesses = new double[] {
  0.5,0.5,0.5,0.5 };
edges = IndexedFaceSetUtility.edgesFromFaces(faces);
ifsf.setEdgeCount(edges.length);
ifsf.setEdgeIndices(edges);
ifsf.setEdgeRelativeRadii( lines_thicknesses );
ifsf.update();
part1=new SceneGraphComponent();
part1.setGeometry(ifsf.getGeometry());
part1.setName("geometry");
part1.setAppearance(appearance);
geom.addChild(part1);
/*----------------------------------------*/
appearance = new Appearance();
appearance.setAttribute(CommonAttributes.VERTEX_DRAW, true);
appearance.setAttribute(CommonAttributes.SPHERES_DRAW, true);
appearance.setAttribute(CommonAttributes.DEPTH_FUDGE_FACTOR,0.999999);
appearance.setAttribute(CommonAttributes.POINT_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.549,(float)0.549,(float)0.549));
geom.setAppearance(appearance);
appearance.setAttribute(CommonAttributes.POLYGON_SHADER +"."+CommonAttributes.SMOOTH_SHADING,false);
appearance.setAttribute(CommonAttributes.FACE_DRAW, true);
appearance.setAttribute(CommonAttributes.TUBES_DRAW,true);
appearance.setAttribute(CommonAttributes.EDGE_DRAW,true);
appearance.setAttribute(CommonAttributes.LINE_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.2745,(float)0.2745,(float)0.2745));
appearance.setAttribute(CommonAttributes.POLYGON_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.4667,(float)0.9255,(float)0.6196));
ifsf = new IndexedFaceSetFactory();
/*--------------------geometry--------------------*/
ifsf.setVertexCount(4);
pts = new double[][]{
{1,1,-1},
  {1,1,1},
  {-1,1,1},
  {-1,1,-1}};//pts
ifsf.setVertexCoordinates(pts);
colors = new double[]{
  1,0,0,
  1,0,0,
  1,0,0,
  1,0,0};
ifsf.setVertexColors(new DoubleArrayArray.Inlined(colors, 3) );
pts_thicknesses = new double[] {
0.1,0.1,0.1,0.1 };
ifsf.setVertexRelativeRadii( pts_thicknesses );
ifsf.setGenerateFaceNormals(true);
ifsf.setGenerateVertexNormals(true);
ifsf.setFaceCount(1);
faces = new int[][]{
  { 0,1,2,3 }};
ifsf.setFaceIndices(faces);
faceColors = new double[]{
  0.4667,0.9255,0.6196
};
ifsf.setFaceColors( new DoubleArrayArray.Inlined(faceColors, 3));
lines_thicknesses = new double[] {
  0.5,0.5,0.5,0.5 };
edges = IndexedFaceSetUtility.edgesFromFaces(faces);
ifsf.setEdgeCount(edges.length);
ifsf.setEdgeIndices(edges);
ifsf.setEdgeRelativeRadii( lines_thicknesses );
ifsf.update();
part1=new SceneGraphComponent();
part1.setGeometry(ifsf.getGeometry());
part1.setName("geometry");
part1.setAppearance(appearance);
geom.addChild(part1);
/*----------------------------------------*/
appearance = new Appearance();
appearance.setAttribute(CommonAttributes.VERTEX_DRAW, true);
appearance.setAttribute(CommonAttributes.SPHERES_DRAW, true);
appearance.setAttribute(CommonAttributes.DEPTH_FUDGE_FACTOR,0.999999);
appearance.setAttribute(CommonAttributes.POINT_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.549,(float)0.549,(float)0.549));
geom.setAppearance(appearance);
appearance.setAttribute(CommonAttributes.POLYGON_SHADER +"."+CommonAttributes.SMOOTH_SHADING,false);
appearance.setAttribute(CommonAttributes.FACE_DRAW, true);
appearance.setAttribute(CommonAttributes.TUBES_DRAW,true);
appearance.setAttribute(CommonAttributes.EDGE_DRAW,true);
appearance.setAttribute(CommonAttributes.LINE_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.2745,(float)0.2745,(float)0.2745));
appearance.setAttribute(CommonAttributes.POLYGON_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.4667,(float)0.9255,(float)0.6196));
ifsf = new IndexedFaceSetFactory();
/*--------------------geometry--------------------*/
ifsf.setVertexCount(4);
pts = new double[][]{
{1,-1,-1},
  {1,1,-1},
  {-1,1,-1},
  {-1,-1,-1}};//pts
ifsf.setVertexCoordinates(pts);
colors = new double[]{
  1,0,0,
  1,0,0,
  1,0,0,
  1,0,0};
ifsf.setVertexColors(new DoubleArrayArray.Inlined(colors, 3) );
pts_thicknesses = new double[] {
0.1,0.1,0.1,0.1 };
ifsf.setVertexRelativeRadii( pts_thicknesses );
ifsf.setGenerateFaceNormals(true);
ifsf.setGenerateVertexNormals(true);
ifsf.setFaceCount(1);
faces = new int[][]{
  { 0,1,2,3 }};
ifsf.setFaceIndices(faces);
faceColors = new double[]{
  0.4667,0.9255,0.6196
};
ifsf.setFaceColors( new DoubleArrayArray.Inlined(faceColors, 3));
lines_thicknesses = new double[] {
  0.5,0.5,0.5,0.5 };
edges = IndexedFaceSetUtility.edgesFromFaces(faces);
ifsf.setEdgeCount(edges.length);
ifsf.setEdgeIndices(edges);
ifsf.setEdgeRelativeRadii( lines_thicknesses );
ifsf.update();
part1=new SceneGraphComponent();
part1.setGeometry(ifsf.getGeometry());
part1.setName("geometry");
part1.setAppearance(appearance);
geom.addChild(part1);
/*----------------------------------------*/
appearance = new Appearance();
appearance.setAttribute(CommonAttributes.VERTEX_DRAW, true);
appearance.setAttribute(CommonAttributes.SPHERES_DRAW, true);
appearance.setAttribute(CommonAttributes.DEPTH_FUDGE_FACTOR,0.999999);
appearance.setAttribute(CommonAttributes.POINT_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.549,(float)0.549,(float)0.549));
geom.setAppearance(appearance);
appearance.setAttribute(CommonAttributes.POLYGON_SHADER +"."+CommonAttributes.SMOOTH_SHADING,false);
appearance.setAttribute(CommonAttributes.FACE_DRAW, true);
appearance.setAttribute(CommonAttributes.TUBES_DRAW,true);
appearance.setAttribute(CommonAttributes.EDGE_DRAW,true);
appearance.setAttribute(CommonAttributes.LINE_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.2745,(float)0.2745,(float)0.2745));
appearance.setAttribute(CommonAttributes.POLYGON_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.4667,(float)0.9255,(float)0.6196));
ifsf = new IndexedFaceSetFactory();
/*--------------------geometry--------------------*/
ifsf.setVertexCount(4);
pts = new double[][]{
{1,-1,1},
  {1,1,1},
  {-1,1,1},
  {-1,-1,1}};//pts
ifsf.setVertexCoordinates(pts);
colors = new double[]{
  1,0,0,
  1,0,0,
  1,0,0,
  1,0,0};
ifsf.setVertexColors(new DoubleArrayArray.Inlined(colors, 3) );
pts_thicknesses = new double[] {
0.1,0.1,0.1,0.1 };
ifsf.setVertexRelativeRadii( pts_thicknesses );
ifsf.setGenerateFaceNormals(true);
ifsf.setGenerateVertexNormals(true);
ifsf.setFaceCount(1);
faces = new int[][]{
  { 0,1,2,3 }};
ifsf.setFaceIndices(faces);
faceColors = new double[]{
  0.4667,0.9255,0.6196
};
ifsf.setFaceColors( new DoubleArrayArray.Inlined(faceColors, 3));
lines_thicknesses = new double[] {
  0.5,0.5,0.5,0.5 };
edges = IndexedFaceSetUtility.edgesFromFaces(faces);
ifsf.setEdgeCount(edges.length);
ifsf.setEdgeIndices(edges);
ifsf.setEdgeRelativeRadii( lines_thicknesses );
ifsf.update();
part1=new SceneGraphComponent();
part1.setGeometry(ifsf.getGeometry());
part1.setName("geometry");
part1.setAppearance(appearance);
geom.addChild(part1);
/*----------------------------------------*/
appearance = new Appearance();
appearance.setAttribute(CommonAttributes.VERTEX_DRAW, true);
appearance.setAttribute(CommonAttributes.SPHERES_DRAW, true);
appearance.setAttribute(CommonAttributes.DEPTH_FUDGE_FACTOR,0.999999);
appearance.setAttribute(CommonAttributes.POINT_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.549,(float)0.549,(float)0.549));
geom.setAppearance(appearance);
appearance.setAttribute(CommonAttributes.POLYGON_SHADER +"."+CommonAttributes.SMOOTH_SHADING,false);
appearance.setAttribute(CommonAttributes.FACE_DRAW, true);
appearance.setAttribute(CommonAttributes.TUBES_DRAW,true);
appearance.setAttribute(CommonAttributes.EDGE_DRAW,true);
appearance.setAttribute(CommonAttributes.LINE_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.2745,(float)0.2745,(float)0.2745));
appearance.setAttribute(CommonAttributes.POLYGON_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.4667,(float)0.9255,(float)0.6196));
ifsf = new IndexedFaceSetFactory();
/*--------------------geometry--------------------*/
ifsf.setVertexCount(4);
pts = new double[][]{
{-1,-1,1},
  {-1,-1,-1},
  {-2,-2,2},
  {-2,-2,-2}};//pts
ifsf.setVertexCoordinates(pts);
colors = new double[]{
  1,0,0,
  1,0,0,
  1,0,0,
  1,0,0};
ifsf.setVertexColors(new DoubleArrayArray.Inlined(colors, 3) );
pts_thicknesses = new double[] {
0.1,0.1,0.1,0.1 };
ifsf.setVertexRelativeRadii( pts_thicknesses );
ifsf.setGenerateFaceNormals(true);
ifsf.setGenerateVertexNormals(true);
ifsf.setFaceCount(1);
faces = new int[][]{
  { 1,0,2,3 }};
ifsf.setFaceIndices(faces);
faceColors = new double[]{
  0.4667,0.9255,0.6196
};
ifsf.setFaceColors( new DoubleArrayArray.Inlined(faceColors, 3));
lines_thicknesses = new double[] {
  0.5,0.5,0.5,0.5 };
edges = IndexedFaceSetUtility.edgesFromFaces(faces);
ifsf.setEdgeCount(edges.length);
ifsf.setEdgeIndices(edges);
ifsf.setEdgeRelativeRadii( lines_thicknesses );
ifsf.update();
part1=new SceneGraphComponent();
part1.setGeometry(ifsf.getGeometry());
part1.setName("geometry");
part1.setAppearance(appearance);
geom.addChild(part1);
/*----------------------------------------*/
appearance = new Appearance();
appearance.setAttribute(CommonAttributes.VERTEX_DRAW, true);
appearance.setAttribute(CommonAttributes.SPHERES_DRAW, true);
appearance.setAttribute(CommonAttributes.DEPTH_FUDGE_FACTOR,0.999999);
appearance.setAttribute(CommonAttributes.POINT_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.549,(float)0.549,(float)0.549));
geom.setAppearance(appearance);
appearance.setAttribute(CommonAttributes.POLYGON_SHADER +"."+CommonAttributes.SMOOTH_SHADING,false);
appearance.setAttribute(CommonAttributes.FACE_DRAW, true);
appearance.setAttribute(CommonAttributes.TUBES_DRAW,true);
appearance.setAttribute(CommonAttributes.EDGE_DRAW,true);
appearance.setAttribute(CommonAttributes.LINE_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.2745,(float)0.2745,(float)0.2745));
appearance.setAttribute(CommonAttributes.POLYGON_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.4667,(float)0.9255,(float)0.6196));
ifsf = new IndexedFaceSetFactory();
/*--------------------geometry--------------------*/
ifsf.setVertexCount(4);
pts = new double[][]{
{1,-1,1},
  {1,-1,-1},
  {2,-2,2},
  {2,-2,-2}};//pts
ifsf.setVertexCoordinates(pts);
colors = new double[]{
  1,0,0,
  1,0,0,
  1,0,0,
  1,0,0};
ifsf.setVertexColors(new DoubleArrayArray.Inlined(colors, 3) );
pts_thicknesses = new double[] {
0.1,0.1,0.1,0.1 };
ifsf.setVertexRelativeRadii( pts_thicknesses );
ifsf.setGenerateFaceNormals(true);
ifsf.setGenerateVertexNormals(true);
ifsf.setFaceCount(1);
faces = new int[][]{
  { 1,0,2,3 }};
ifsf.setFaceIndices(faces);
faceColors = new double[]{
  0.4667,0.9255,0.6196
};
ifsf.setFaceColors( new DoubleArrayArray.Inlined(faceColors, 3));
lines_thicknesses = new double[] {
  0.5,0.5,0.5,0.5 };
edges = IndexedFaceSetUtility.edgesFromFaces(faces);
ifsf.setEdgeCount(edges.length);
ifsf.setEdgeIndices(edges);
ifsf.setEdgeRelativeRadii( lines_thicknesses );
ifsf.update();
part1=new SceneGraphComponent();
part1.setGeometry(ifsf.getGeometry());
part1.setName("geometry");
part1.setAppearance(appearance);
geom.addChild(part1);
/*----------------------------------------*/
appearance = new Appearance();
appearance.setAttribute(CommonAttributes.VERTEX_DRAW, true);
appearance.setAttribute(CommonAttributes.SPHERES_DRAW, true);
appearance.setAttribute(CommonAttributes.DEPTH_FUDGE_FACTOR,0.999999);
appearance.setAttribute(CommonAttributes.POINT_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.549,(float)0.549,(float)0.549));
geom.setAppearance(appearance);
appearance.setAttribute(CommonAttributes.POLYGON_SHADER +"."+CommonAttributes.SMOOTH_SHADING,false);
appearance.setAttribute(CommonAttributes.FACE_DRAW, true);
appearance.setAttribute(CommonAttributes.TUBES_DRAW,true);
appearance.setAttribute(CommonAttributes.EDGE_DRAW,true);
appearance.setAttribute(CommonAttributes.LINE_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.2745,(float)0.2745,(float)0.2745));
appearance.setAttribute(CommonAttributes.POLYGON_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.4667,(float)0.9255,(float)0.6196));
ifsf = new IndexedFaceSetFactory();
/*--------------------geometry--------------------*/
ifsf.setVertexCount(4);
pts = new double[][]{
{-1,1,-1},
  {-1,1,1},
  {-2,2,2},
  {-2,2,-2}};//pts
ifsf.setVertexCoordinates(pts);
colors = new double[]{
  1,0,0,
  1,0,0,
  1,0,0,
  1,0,0};
ifsf.setVertexColors(new DoubleArrayArray.Inlined(colors, 3) );
pts_thicknesses = new double[] {
0.1,0.1,0.1,0.1 };
ifsf.setVertexRelativeRadii( pts_thicknesses );
ifsf.setGenerateFaceNormals(true);
ifsf.setGenerateVertexNormals(true);
ifsf.setFaceCount(1);
faces = new int[][]{
  { 0,1,2,3 }};
ifsf.setFaceIndices(faces);
faceColors = new double[]{
  0.4667,0.9255,0.6196
};
ifsf.setFaceColors( new DoubleArrayArray.Inlined(faceColors, 3));
lines_thicknesses = new double[] {
  0.5,0.5,0.5,0.5 };
edges = IndexedFaceSetUtility.edgesFromFaces(faces);
ifsf.setEdgeCount(edges.length);
ifsf.setEdgeIndices(edges);
ifsf.setEdgeRelativeRadii( lines_thicknesses );
ifsf.update();
part1=new SceneGraphComponent();
part1.setGeometry(ifsf.getGeometry());
part1.setName("geometry");
part1.setAppearance(appearance);
geom.addChild(part1);
/*----------------------------------------*/
appearance = new Appearance();
appearance.setAttribute(CommonAttributes.VERTEX_DRAW, true);
appearance.setAttribute(CommonAttributes.SPHERES_DRAW, true);
appearance.setAttribute(CommonAttributes.DEPTH_FUDGE_FACTOR,0.999999);
appearance.setAttribute(CommonAttributes.POINT_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.549,(float)0.549,(float)0.549));
geom.setAppearance(appearance);
appearance.setAttribute(CommonAttributes.POLYGON_SHADER +"."+CommonAttributes.SMOOTH_SHADING,false);
appearance.setAttribute(CommonAttributes.FACE_DRAW, true);
appearance.setAttribute(CommonAttributes.TUBES_DRAW,true);
appearance.setAttribute(CommonAttributes.EDGE_DRAW,true);
appearance.setAttribute(CommonAttributes.LINE_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.2745,(float)0.2745,(float)0.2745));
appearance.setAttribute(CommonAttributes.POLYGON_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.4667,(float)0.9255,(float)0.6196));
ifsf = new IndexedFaceSetFactory();
/*--------------------geometry--------------------*/
ifsf.setVertexCount(4);
pts = new double[][]{
{1,1,1},
  {1,1,-1},
  {2,2,2},
  {2,2,-2}};//pts
ifsf.setVertexCoordinates(pts);
colors = new double[]{
  1,0,0,
  1,0,0,
  1,0,0,
  1,0,0};
ifsf.setVertexColors(new DoubleArrayArray.Inlined(colors, 3) );
pts_thicknesses = new double[] {
0.1,0.1,0.1,0.1 };
ifsf.setVertexRelativeRadii( pts_thicknesses );
ifsf.setGenerateFaceNormals(true);
ifsf.setGenerateVertexNormals(true);
ifsf.setFaceCount(1);
faces = new int[][]{
  { 1,0,2,3 }};
ifsf.setFaceIndices(faces);
faceColors = new double[]{
  0.4667,0.9255,0.6196
};
ifsf.setFaceColors( new DoubleArrayArray.Inlined(faceColors, 3));
lines_thicknesses = new double[] {
  0.5,0.5,0.5,0.5 };
edges = IndexedFaceSetUtility.edgesFromFaces(faces);
ifsf.setEdgeCount(edges.length);
ifsf.setEdgeIndices(edges);
ifsf.setEdgeRelativeRadii( lines_thicknesses );
ifsf.update();
part1=new SceneGraphComponent();
part1.setGeometry(ifsf.getGeometry());
part1.setName("geometry");
part1.setAppearance(appearance);
geom.addChild(part1);
/*----------------------------------------*/
appearance = new Appearance();
appearance.setAttribute(CommonAttributes.VERTEX_DRAW, true);
appearance.setAttribute(CommonAttributes.SPHERES_DRAW, true);
appearance.setAttribute(CommonAttributes.DEPTH_FUDGE_FACTOR,0.999999);
appearance.setAttribute(CommonAttributes.POINT_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.549,(float)0.549,(float)0.549));
geom.setAppearance(appearance);
appearance.setAttribute(CommonAttributes.POLYGON_SHADER +"."+CommonAttributes.SMOOTH_SHADING,false);
appearance.setAttribute(CommonAttributes.FACE_DRAW, true);
appearance.setAttribute(CommonAttributes.TUBES_DRAW,true);
appearance.setAttribute(CommonAttributes.EDGE_DRAW,true);
appearance.setAttribute(CommonAttributes.LINE_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.2745,(float)0.2745,(float)0.2745));
appearance.setAttribute(CommonAttributes.POLYGON_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.4667,(float)0.9255,(float)0.6196));
ifsf = new IndexedFaceSetFactory();
/*--------------------geometry--------------------*/
ifsf.setVertexCount(4);
pts = new double[][]{
{-1,-1,-1},
  {-1,1,-1},
  {-2,-2,-2},
  {-2,2,-2}};//pts
ifsf.setVertexCoordinates(pts);
colors = new double[]{
  1,0,0,
  1,0,0,
  1,0,0,
  1,0,0};
ifsf.setVertexColors(new DoubleArrayArray.Inlined(colors, 3) );
pts_thicknesses = new double[] {
0.1,0.1,0.1,0.1 };
ifsf.setVertexRelativeRadii( pts_thicknesses );
ifsf.setGenerateFaceNormals(true);
ifsf.setGenerateVertexNormals(true);
ifsf.setFaceCount(1);
faces = new int[][]{
  { 0,1,3,2 }};
ifsf.setFaceIndices(faces);
faceColors = new double[]{
  0.4667,0.9255,0.6196
};
ifsf.setFaceColors( new DoubleArrayArray.Inlined(faceColors, 3));
lines_thicknesses = new double[] {
  0.5,0.5,0.5,0.5 };
edges = IndexedFaceSetUtility.edgesFromFaces(faces);
ifsf.setEdgeCount(edges.length);
ifsf.setEdgeIndices(edges);
ifsf.setEdgeRelativeRadii( lines_thicknesses );
ifsf.update();
part1=new SceneGraphComponent();
part1.setGeometry(ifsf.getGeometry());
part1.setName("geometry");
part1.setAppearance(appearance);
geom.addChild(part1);
/*----------------------------------------*/
appearance = new Appearance();
appearance.setAttribute(CommonAttributes.VERTEX_DRAW, true);
appearance.setAttribute(CommonAttributes.SPHERES_DRAW, true);
appearance.setAttribute(CommonAttributes.DEPTH_FUDGE_FACTOR,0.999999);
appearance.setAttribute(CommonAttributes.POINT_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.549,(float)0.549,(float)0.549));
geom.setAppearance(appearance);
appearance.setAttribute(CommonAttributes.POLYGON_SHADER +"."+CommonAttributes.SMOOTH_SHADING,false);
appearance.setAttribute(CommonAttributes.FACE_DRAW, true);
appearance.setAttribute(CommonAttributes.TUBES_DRAW,true);
appearance.setAttribute(CommonAttributes.EDGE_DRAW,true);
appearance.setAttribute(CommonAttributes.LINE_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.2745,(float)0.2745,(float)0.2745));
appearance.setAttribute(CommonAttributes.POLYGON_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.4667,(float)0.9255,(float)0.6196));
ifsf = new IndexedFaceSetFactory();
/*--------------------geometry--------------------*/
ifsf.setVertexCount(4);
pts = new double[][]{
{1,1,-1},
  {1,-1,-1},
  {2,2,-2},
  {2,-2,-2}};//pts
ifsf.setVertexCoordinates(pts);
colors = new double[]{
  1,0,0,
  1,0,0,
  1,0,0,
  1,0,0};
ifsf.setVertexColors(new DoubleArrayArray.Inlined(colors, 3) );
pts_thicknesses = new double[] {
0.1,0.1,0.1,0.1 };
ifsf.setVertexRelativeRadii( pts_thicknesses );
ifsf.setGenerateFaceNormals(true);
ifsf.setGenerateVertexNormals(true);
ifsf.setFaceCount(1);
faces = new int[][]{
  { 1,0,2,3 }};
ifsf.setFaceIndices(faces);
faceColors = new double[]{
  0.4667,0.9255,0.6196
};
ifsf.setFaceColors( new DoubleArrayArray.Inlined(faceColors, 3));
lines_thicknesses = new double[] {
  0.5,0.5,0.5,0.5 };
edges = IndexedFaceSetUtility.edgesFromFaces(faces);
ifsf.setEdgeCount(edges.length);
ifsf.setEdgeIndices(edges);
ifsf.setEdgeRelativeRadii( lines_thicknesses );
ifsf.update();
part1=new SceneGraphComponent();
part1.setGeometry(ifsf.getGeometry());
part1.setName("geometry");
part1.setAppearance(appearance);
geom.addChild(part1);
/*----------------------------------------*/
appearance = new Appearance();
appearance.setAttribute(CommonAttributes.VERTEX_DRAW, true);
appearance.setAttribute(CommonAttributes.SPHERES_DRAW, true);
appearance.setAttribute(CommonAttributes.DEPTH_FUDGE_FACTOR,0.999999);
appearance.setAttribute(CommonAttributes.POINT_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.549,(float)0.549,(float)0.549));
geom.setAppearance(appearance);
appearance.setAttribute(CommonAttributes.POLYGON_SHADER +"."+CommonAttributes.SMOOTH_SHADING,false);
appearance.setAttribute(CommonAttributes.FACE_DRAW, true);
appearance.setAttribute(CommonAttributes.TUBES_DRAW,true);
appearance.setAttribute(CommonAttributes.EDGE_DRAW,true);
appearance.setAttribute(CommonAttributes.LINE_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.2745,(float)0.2745,(float)0.2745));
appearance.setAttribute(CommonAttributes.POLYGON_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.4667,(float)0.9255,(float)0.6196));
ifsf = new IndexedFaceSetFactory();
/*--------------------geometry--------------------*/
ifsf.setVertexCount(4);
pts = new double[][]{
{-1,1,1},
  {-1,-1,1},
  {-2,-2,2},
  {-2,2,2}};//pts
ifsf.setVertexCoordinates(pts);
colors = new double[]{
  1,0,0,
  1,0,0,
  1,0,0,
  1,0,0};
ifsf.setVertexColors(new DoubleArrayArray.Inlined(colors, 3) );
pts_thicknesses = new double[] {
0.1,0.1,0.1,0.1 };
ifsf.setVertexRelativeRadii( pts_thicknesses );
ifsf.setGenerateFaceNormals(true);
ifsf.setGenerateVertexNormals(true);
ifsf.setFaceCount(1);
faces = new int[][]{
  { 1,0,3,2 }};
ifsf.setFaceIndices(faces);
faceColors = new double[]{
  0.4667,0.9255,0.6196
};
ifsf.setFaceColors( new DoubleArrayArray.Inlined(faceColors, 3));
lines_thicknesses = new double[] {
  0.5,0.5,0.5,0.5 };
edges = IndexedFaceSetUtility.edgesFromFaces(faces);
ifsf.setEdgeCount(edges.length);
ifsf.setEdgeIndices(edges);
ifsf.setEdgeRelativeRadii( lines_thicknesses );
ifsf.update();
part1=new SceneGraphComponent();
part1.setGeometry(ifsf.getGeometry());
part1.setName("geometry");
part1.setAppearance(appearance);
geom.addChild(part1);
/*----------------------------------------*/
appearance = new Appearance();
appearance.setAttribute(CommonAttributes.VERTEX_DRAW, true);
appearance.setAttribute(CommonAttributes.SPHERES_DRAW, true);
appearance.setAttribute(CommonAttributes.DEPTH_FUDGE_FACTOR,0.999999);
appearance.setAttribute(CommonAttributes.POINT_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.549,(float)0.549,(float)0.549));
geom.setAppearance(appearance);
appearance.setAttribute(CommonAttributes.POLYGON_SHADER +"."+CommonAttributes.SMOOTH_SHADING,false);
appearance.setAttribute(CommonAttributes.FACE_DRAW, true);
appearance.setAttribute(CommonAttributes.TUBES_DRAW,true);
appearance.setAttribute(CommonAttributes.EDGE_DRAW,true);
appearance.setAttribute(CommonAttributes.LINE_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.2745,(float)0.2745,(float)0.2745));
appearance.setAttribute(CommonAttributes.POLYGON_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.4667,(float)0.9255,(float)0.6196));
ifsf = new IndexedFaceSetFactory();
/*--------------------geometry--------------------*/
ifsf.setVertexCount(4);
pts = new double[][]{
{1,1,1},
  {1,-1,1},
  {2,2,2},
  {2,-2,2}};//pts
ifsf.setVertexCoordinates(pts);
colors = new double[]{
  1,0,0,
  1,0,0,
  1,0,0,
  1,0,0};
ifsf.setVertexColors(new DoubleArrayArray.Inlined(colors, 3) );
pts_thicknesses = new double[] {
0.1,0.1,0.1,0.1 };
ifsf.setVertexRelativeRadii( pts_thicknesses );
ifsf.setGenerateFaceNormals(true);
ifsf.setGenerateVertexNormals(true);
ifsf.setFaceCount(1);
faces = new int[][]{
  { 1,0,2,3 }};
ifsf.setFaceIndices(faces);
faceColors = new double[]{
  0.4667,0.9255,0.6196
};
ifsf.setFaceColors( new DoubleArrayArray.Inlined(faceColors, 3));
lines_thicknesses = new double[] {
  0.5,0.5,0.5,0.5 };
edges = IndexedFaceSetUtility.edgesFromFaces(faces);
ifsf.setEdgeCount(edges.length);
ifsf.setEdgeIndices(edges);
ifsf.setEdgeRelativeRadii( lines_thicknesses );
ifsf.update();
part1=new SceneGraphComponent();
part1.setGeometry(ifsf.getGeometry());
part1.setName("geometry");
part1.setAppearance(appearance);
geom.addChild(part1);
/*----------------------------------------*/
appearance = new Appearance();
appearance.setAttribute(CommonAttributes.VERTEX_DRAW, true);
appearance.setAttribute(CommonAttributes.SPHERES_DRAW, true);
appearance.setAttribute(CommonAttributes.DEPTH_FUDGE_FACTOR,0.999999);
appearance.setAttribute(CommonAttributes.POINT_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.549,(float)0.549,(float)0.549));
geom.setAppearance(appearance);
appearance.setAttribute(CommonAttributes.POLYGON_SHADER +"."+CommonAttributes.SMOOTH_SHADING,false);
appearance.setAttribute(CommonAttributes.FACE_DRAW, true);
appearance.setAttribute(CommonAttributes.TUBES_DRAW,true);
appearance.setAttribute(CommonAttributes.EDGE_DRAW,true);
appearance.setAttribute(CommonAttributes.LINE_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.2745,(float)0.2745,(float)0.2745));
appearance.setAttribute(CommonAttributes.POLYGON_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.4667,(float)0.9255,(float)0.6196));
ifsf = new IndexedFaceSetFactory();
/*--------------------geometry--------------------*/
ifsf.setVertexCount(4);
pts = new double[][]{
{-1,-1,-1},
  {1,-1,-1},
  {-2,-2,-2},
  {2,-2,-2}};//pts
ifsf.setVertexCoordinates(pts);
colors = new double[]{
  1,0,0,
  1,0,0,
  1,0,0,
  1,0,0};
ifsf.setVertexColors(new DoubleArrayArray.Inlined(colors, 3) );
pts_thicknesses = new double[] {
0.1,0.1,0.1,0.1 };
ifsf.setVertexRelativeRadii( pts_thicknesses );
ifsf.setGenerateFaceNormals(true);
ifsf.setGenerateVertexNormals(true);
ifsf.setFaceCount(1);
faces = new int[][]{
  { 0,1,3,2 }};
ifsf.setFaceIndices(faces);
faceColors = new double[]{
  0.4667,0.9255,0.6196
};
ifsf.setFaceColors( new DoubleArrayArray.Inlined(faceColors, 3));
lines_thicknesses = new double[] {
  0.5,0.5,0.5,0.5 };
edges = IndexedFaceSetUtility.edgesFromFaces(faces);
ifsf.setEdgeCount(edges.length);
ifsf.setEdgeIndices(edges);
ifsf.setEdgeRelativeRadii( lines_thicknesses );
ifsf.update();
part1=new SceneGraphComponent();
part1.setGeometry(ifsf.getGeometry());
part1.setName("geometry");
part1.setAppearance(appearance);
geom.addChild(part1);
/*----------------------------------------*/
appearance = new Appearance();
appearance.setAttribute(CommonAttributes.VERTEX_DRAW, true);
appearance.setAttribute(CommonAttributes.SPHERES_DRAW, true);
appearance.setAttribute(CommonAttributes.DEPTH_FUDGE_FACTOR,0.999999);
appearance.setAttribute(CommonAttributes.POINT_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.549,(float)0.549,(float)0.549));
geom.setAppearance(appearance);
appearance.setAttribute(CommonAttributes.POLYGON_SHADER +"."+CommonAttributes.SMOOTH_SHADING,false);
appearance.setAttribute(CommonAttributes.FACE_DRAW, true);
appearance.setAttribute(CommonAttributes.TUBES_DRAW,true);
appearance.setAttribute(CommonAttributes.EDGE_DRAW,true);
appearance.setAttribute(CommonAttributes.LINE_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.2745,(float)0.2745,(float)0.2745));
appearance.setAttribute(CommonAttributes.POLYGON_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.4667,(float)0.9255,(float)0.6196));
ifsf = new IndexedFaceSetFactory();
/*--------------------geometry--------------------*/
ifsf.setVertexCount(4);
pts = new double[][]{
{-1,1,-1},
  {1,1,-1},
  {-2,2,-2},
  {2,2,-2}};//pts
ifsf.setVertexCoordinates(pts);
colors = new double[]{
  1,0,0,
  1,0,0,
  1,0,0,
  1,0,0};
ifsf.setVertexColors(new DoubleArrayArray.Inlined(colors, 3) );
pts_thicknesses = new double[] {
0.1,0.1,0.1,0.1 };
ifsf.setVertexRelativeRadii( pts_thicknesses );
ifsf.setGenerateFaceNormals(true);
ifsf.setGenerateVertexNormals(true);
ifsf.setFaceCount(1);
faces = new int[][]{
  { 0,1,3,2 }};
ifsf.setFaceIndices(faces);
faceColors = new double[]{
  0.4667,0.9255,0.6196
};
ifsf.setFaceColors( new DoubleArrayArray.Inlined(faceColors, 3));
lines_thicknesses = new double[] {
  0.5,0.5,0.5,0.5 };
edges = IndexedFaceSetUtility.edgesFromFaces(faces);
ifsf.setEdgeCount(edges.length);
ifsf.setEdgeIndices(edges);
ifsf.setEdgeRelativeRadii( lines_thicknesses );
ifsf.update();
part1=new SceneGraphComponent();
part1.setGeometry(ifsf.getGeometry());
part1.setName("geometry");
part1.setAppearance(appearance);
geom.addChild(part1);
/*----------------------------------------*/
appearance = new Appearance();
appearance.setAttribute(CommonAttributes.VERTEX_DRAW, true);
appearance.setAttribute(CommonAttributes.SPHERES_DRAW, true);
appearance.setAttribute(CommonAttributes.DEPTH_FUDGE_FACTOR,0.999999);
appearance.setAttribute(CommonAttributes.POINT_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.549,(float)0.549,(float)0.549));
geom.setAppearance(appearance);
appearance.setAttribute(CommonAttributes.POLYGON_SHADER +"."+CommonAttributes.SMOOTH_SHADING,false);
appearance.setAttribute(CommonAttributes.FACE_DRAW, true);
appearance.setAttribute(CommonAttributes.TUBES_DRAW,true);
appearance.setAttribute(CommonAttributes.EDGE_DRAW,true);
appearance.setAttribute(CommonAttributes.LINE_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.2745,(float)0.2745,(float)0.2745));
appearance.setAttribute(CommonAttributes.POLYGON_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.4667,(float)0.9255,(float)0.6196));
ifsf = new IndexedFaceSetFactory();
/*--------------------geometry--------------------*/
ifsf.setVertexCount(4);
pts = new double[][]{
{1,-1,1},
  {-1,-1,1},
  {-2,-2,2},
  {2,-2,2}};//pts
ifsf.setVertexCoordinates(pts);
colors = new double[]{
  1,0,0,
  1,0,0,
  1,0,0,
  1,0,0};
ifsf.setVertexColors(new DoubleArrayArray.Inlined(colors, 3) );
pts_thicknesses = new double[] {
0.1,0.1,0.1,0.1 };
ifsf.setVertexRelativeRadii( pts_thicknesses );
ifsf.setGenerateFaceNormals(true);
ifsf.setGenerateVertexNormals(true);
ifsf.setFaceCount(1);
faces = new int[][]{
  { 1,0,3,2 }};
ifsf.setFaceIndices(faces);
faceColors = new double[]{
  0.4667,0.9255,0.6196
};
ifsf.setFaceColors( new DoubleArrayArray.Inlined(faceColors, 3));
lines_thicknesses = new double[] {
  0.5,0.5,0.5,0.5 };
edges = IndexedFaceSetUtility.edgesFromFaces(faces);
ifsf.setEdgeCount(edges.length);
ifsf.setEdgeIndices(edges);
ifsf.setEdgeRelativeRadii( lines_thicknesses );
ifsf.update();
part1=new SceneGraphComponent();
part1.setGeometry(ifsf.getGeometry());
part1.setName("geometry");
part1.setAppearance(appearance);
geom.addChild(part1);
/*----------------------------------------*/
appearance = new Appearance();
appearance.setAttribute(CommonAttributes.VERTEX_DRAW, true);
appearance.setAttribute(CommonAttributes.SPHERES_DRAW, true);
appearance.setAttribute(CommonAttributes.DEPTH_FUDGE_FACTOR,0.999999);
appearance.setAttribute(CommonAttributes.POINT_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.549,(float)0.549,(float)0.549));
geom.setAppearance(appearance);
appearance.setAttribute(CommonAttributes.POLYGON_SHADER +"."+CommonAttributes.SMOOTH_SHADING,false);
appearance.setAttribute(CommonAttributes.FACE_DRAW, true);
appearance.setAttribute(CommonAttributes.TUBES_DRAW,true);
appearance.setAttribute(CommonAttributes.EDGE_DRAW,true);
appearance.setAttribute(CommonAttributes.LINE_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.2745,(float)0.2745,(float)0.2745));
appearance.setAttribute(CommonAttributes.POLYGON_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.4667,(float)0.9255,(float)0.6196));
ifsf = new IndexedFaceSetFactory();
/*--------------------geometry--------------------*/
ifsf.setVertexCount(4);
pts = new double[][]{
{-1,1,1},
  {1,1,1},
  {-2,2,2},
  {2,2,2}};//pts
ifsf.setVertexCoordinates(pts);
colors = new double[]{
  1,0,0,
  1,0,0,
  1,0,0,
  1,0,0};
ifsf.setVertexColors(new DoubleArrayArray.Inlined(colors, 3) );
pts_thicknesses = new double[] {
0.1,0.1,0.1,0.1 };
ifsf.setVertexRelativeRadii( pts_thicknesses );
ifsf.setGenerateFaceNormals(true);
ifsf.setGenerateVertexNormals(true);
ifsf.setFaceCount(1);
faces = new int[][]{
  { 0,1,3,2 }};
ifsf.setFaceIndices(faces);
faceColors = new double[]{
  0.4667,0.9255,0.6196
};
ifsf.setFaceColors( new DoubleArrayArray.Inlined(faceColors, 3));
lines_thicknesses = new double[] {
  0.5,0.5,0.5,0.5 };
edges = IndexedFaceSetUtility.edgesFromFaces(faces);
ifsf.setEdgeCount(edges.length);
ifsf.setEdgeIndices(edges);
ifsf.setEdgeRelativeRadii( lines_thicknesses );
ifsf.update();
part1=new SceneGraphComponent();
part1.setGeometry(ifsf.getGeometry());
part1.setName("geometry");
part1.setAppearance(appearance);
geom.addChild(part1);
/*----------------------------------------*/
appearance = new Appearance();
appearance.setAttribute(CommonAttributes.VERTEX_DRAW, true);
appearance.setAttribute(CommonAttributes.SPHERES_DRAW, true);
appearance.setAttribute(CommonAttributes.DEPTH_FUDGE_FACTOR,0.999999);
appearance.setAttribute(CommonAttributes.POINT_SHADER +"."+ CommonAttributes.DIFFUSE_COLOR,
  new java.awt.Color((float)0.549,(float)0.549,(float)0.549));
geom.setAppearance(appearance);
psf = new PointSetFactory();
/*--------------------geometry--------------------*/
psf.setVertexCount(18);
pts = new double[][]{
{-1,0,0},
  {1,0,0},
  {0,-1,0},
  {0,1,0},
  {0,0,-1},
  {0,0,1},
  {-1.5,-1.5,0},
  {1.5,-1.5,0},
  {-1.5,1.5,0},
  {1.5,1.5,0},
  {-1.5,0,-1.5},
  {1.5,0,-1.5},
  {-1.5,0,1.5},
  {1.5,0,1.5},
  {0,-1.5,-1.5},
  {0,1.5,-1.5},
  {0,-1.5,1.5},
  {0,1.5,1.5}};//pts
psf.setVertexCoordinates(pts);
colors = new double[]{
  0,0,0,
  0,0,0,
  0,0,0,
  0,0,0,
  0,0,0,
  0,0,0,
  0,0,0,
  0,0,0,
  0,0,0,
  0,0,0,
  0,0,0,
  0,0,0,
  0,0,0,
  0,0,0,
  0,0,0,
  0,0,0,
  0,0,0,
  0,0,0};
psf.setVertexColors(new DoubleArrayArray.Inlined(colors, 3) );
pts_thicknesses = new double[] {
0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2 };
psf.setVertexRelativeRadii( pts_thicknesses );
labels = new String[]{"# 0: 1","# 1: 1","# 2: 1","# 3: 1","# 4: 1","# 5: 1","# 6: 1","# 7: 1","# 8: 1","# 9: 1","# 10: 1","# 11: 1","# 12: 1","# 13: 1","# 14: 1","# 15: 1","# 16: 1","# 17: 1"};
psf.setVertexLabels(labels);
psf.update();
part1=new SceneGraphComponent();
part1.setGeometry(psf.getGeometry());
part1.setName("geometry");
part1.setAppearance(appearance);
geom.addChild(part1);
/*----------------------------------------*/
root.notify();
} 
return;
